#!/usr/bin/env node
'use strict';

const app = require('../app');
const http = require('http');
const winston = require('winston');

let normalizePort = (val) => {
    let port = parseInt(val, 10);
    if (isNaN(port)) {
        // named pipe
        return val;
    }
    if (port >= 0) {
        // port number
        return port;
    }
    return false;
}
let port = normalizePort(process.env.PORT || '3001');
app.set('port', port);

let server = http.createServer(app);
server.listen(port);
server.on('error', (error) => {
    if (error.syscall !== 'listen') throw error;
    let bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    switch (error.code) {
        case 'EACCES':
            console.error('[' + app.NAME + '] --> ' + bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error('[' + app.NAME + '] --> ' + bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
});
server.on('listening', () => {
    let addr = server.address();
    let bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    winston.info('[' + app.NAME + '] --> Server(' + process.env.NODE_ENV + ') Listening on:', bind + ' (http://127.0.0.1:' + addr.port + ')');
});
